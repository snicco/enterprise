version: '3.9'

networks:
  network:

volumes:
  db:
  wordpress_app:
  wordpress_src:

x-user-args: &user-args
  APP_GROUP_ID: ${APP_GROUP_ID?}
  APP_GROUP_NAME: ${APP_GROUP_NAME?}
  APP_USER_ID: ${APP_USER_ID?}
  APP_USER_NAME: ${APP_USER_NAME?}

x-wp-env: &wp-env
  WORDPRESS_DB_HOST: db
  WORDPRESS_DB_USER: root
  WORDPRESS_DB_PASSWORD: root
  WORDPRESS_DB_NAME: snicco_enterprise
  E2E_TEST_WORDPRESS_DB_NAME: snicco_enterprise_e2e_testing
  WORDPRESS_SITE_URL: "https://${APP_HOST?}"

services:

  wp:
    container_name: wp
    build:
      context: ${MONOREPO_ROOT_HOST} # Pass the entire repository as the build context
      dockerfile: ./.docker/images/wp/wordpress.dockerfile
      args:
        <<: *user-args
        WP_VERSION: ${WP_VERSION?}
        WP_CLI_VERSION: ${WP_CLI_VERSION?}
        PHP_VERSION: ${PHP_VERSION?}
        ALPINE_VERSION: ${ALPINE_VERSION?}
        WP_APPLICATION_PATH: ${WORDPRESS_APP_PATH_CONTAINER?}
        WP_SRC_PATH: ${WORDPRESS_SRC_PATH_CONTAINER?}
    environment: *wp-env
    volumes:
      - wordpress_app:${WORDPRESS_APP_PATH_CONTAINER?}
      - wordpress_src:${WORDPRESS_SRC_PATH_CONTAINER?}
    networks:
      - network
    depends_on:
      db:
        condition: service_healthy

  app:
    container_name: app
    build:
      context: ../
      dockerfile: ./images/app/app.dockerfile
      target: ${ENV?}
      args:
        <<: *user-args
        PHP_VERSION: ${PHP_VERSION?}
        ALPINE_VERSION: ${ALPINE_VERSION?}
        COMPOSER_VERSION: ${COMPOSER_VERSION?}
        MONOREPO_PATH: ${APP_CONTAINER_MONOREPO_PATH?}
        WORDPRESS_APP_PATH: ${APP_CONTAINER_WP_APP_PATH?}
        WORDPRESS_SRC_PATH: ${APP_CONTAINER_WP_SRC_PATH?}
    environment:
      <<: *wp-env
      WORDPRESS_DB_NAME: snicco_enterprise_e2e_testing
    volumes:
      - ${MONOREPO_ROOT_HOST?}:${APP_CONTAINER_MONOREPO_PATH?}
      - wordpress_app:${APP_CONTAINER_WP_APP_PATH?}
      - wordpress_src:${APP_CONTAINER_WP_SRC_PATH?}
    secrets:
      - source: composer_auth_json
        target: /home/${APP_USER_NAME?}/.composer/auth.json
    depends_on:
      - wp
    # Keep the app container running.
    # There is no long-running process defined as the entrypoint for the container.
    # Keeping the container running saves as time for frequently run commands since
    # we can use docker exec over docker run.
    # @see https://stackoverflow.com/a/55953120
    networks:
      - network
    tty: true

  db:
    container_name: db
    image: ${DB_IMAGE?}
    environment:
      MYSQL_DATABASE: snicco_enterprise
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ${MONOREPO_ROOT_HOST}/.docker/images/db/imports:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "mysql snicco_enterprise -uroot -proot -e 'SELECT 1;'  || exit 1" ]
      interval: 0.1s
      retries: 50
    networks:
      - network

  nginx:
    container_name: nginx
    build:
      context: ../images/nginx
      dockerfile: nginx.dockerfile
      args:
        <<: *user-args
        NGINX_VERSION: ${NGINX_VERSION?}
        WP_APPLICATION_PATH: ${WORDPRESS_APP_PATH_CONTAINER?}
    depends_on:
      - wp
    volumes:
      - wordpress_app:${WORDPRESS_APP_PATH_CONTAINER?}
    networks:
      - network

  node:
    container_name: node
    build:
      context: ../images/node
      dockerfile: node.dockerfile
      target: ${ENV?}
      args:
        <<: *user-args
        NODE_VERSION: ${NODE_VERSION?}
        ALPINE_VERSION: ${ALPINE_VERSION?}
        MONOREPO_PATH: ${APP_CONTAINER_MONOREPO_PATH?}
    volumes:
      - ${MONOREPO_ROOT_HOST?}:${APP_CONTAINER_MONOREPO_PATH?}
    # Keep the node container running.
    # There is no long-running process defined as the entrypoint for the container.
    # Keeping the container running saves as time for frequently run commands since
    # we can use docker exec over docker run.
    # @see https://stackoverflow.com/a/55953120
    tty: true
    networks:
      - network

  chrome:
    container_name: chrome
    image: selenium/standalone-chrome:4.2.2-20220609
    shm_size: 2gb
    ports:
      - "4444:4444"
    networks:
      - network



secrets:
  composer_auth_json:
    file: ${COMPOSER_AUTH_JSON_PATH}
