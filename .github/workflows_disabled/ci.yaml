name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

# permissions: @todo permissions

env:
  ENV: ci
  TAG: auth-bundle
  FORCE_RUN_IN_CONTAINER: 1
  COMPOSER_AUTH_JSON_PATH: /tmp/composer-auth.json

jobs:

  Build:
    runs-on: ${{ matrix.runs_on }}
    name: Build-${{ matrix.runs_on }}
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.4' ]
        wp: [ '6.0' ]
        runs_on: [ 'buildjet-8vcpu-ubuntu-2004' ]
    env:
      PHP_VERSION: ${{ matrix.php }}
      WP_VERSION: ${{ matrix.wp }}
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v3

      - name: 'Install docker compose'
        run: |
          chmod +x "${GITHUB_WORKSPACE}/.github/bin/install-docker-compose.sh"
          "${GITHUB_WORKSPACE}/.github/bin/install-docker-compose.sh"

      - name: 'Login to GitHub package registry'
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Initialize make'
        run: |
          echo "APP_USER_NAME=$(id -un)" >> $GITHUB_ENV
          echo "APP_USER_ID=$(id -u)" >> $GITHUB_ENV
          echo "APP_GROUP_NAME=$(id -gn)" >> $GITHUB_ENV
          echo "APP_GROUP_ID=$(id -g)" >> $GITHUB_ENV
          make init

      - name: 'Configure composer auth.json'
        run: |
          echo '${{ secrets.COMPOSER_AUTH_JSON }}' > ${{ env.COMPOSER_AUTH_JSON_PATH }}

      - name: 'Pull docker images'
        run: |
          make docker-pull || true # This can fail if the tag does not exist yet.

      - name: 'Build docker images'
        run: |
          make docker-build

      - name: 'QA'
        # Only run QA once.
        if: matrix.php == '7.4' && matrix.wp  == '6.0'
        run: |
          make docker-up MODE=--detach SERVICE=app
          # We need the vendor directory on the runner so that we can share it
          # with the jazqal/phpqa docker image.
          make docker-copy-vendor
          make qa QUIET=1

      - name: 'Tests'
        run: |
          # Only detach container, dont rebuild them.
          make test-packages-parallel QUIET=1 DOCKER_UP_ARGS=--detach

      - name: 'Push images'
        run: make docker-push

#  build:
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        php: [ '8.1', '8.0', '7.4' ]
#        wp: [ '6.0']
#    env:
#      PHP_VERSION: ${{ matrix.php }}
#      WP_VERSION: ${{ matrix.wp }}
#    steps:
#      - name: 'Checkout repository'
#        uses: actions/checkout@v3
#
#      - name: 'Install docker compose'
#        run: |
#          chmod +x "${GITHUB_WORKSPACE}/.github/bin/install-docker-compose.sh"
#          "${GITHUB_WORKSPACE}/.github/bin/install-docker-compose.sh"
#
#      - name: 'Login to GitHub package registry'
#        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: 'Initialize make'
#        run: |
#          echo "APP_USER_NAME=$(id -un)" >> $GITHUB_ENV
#          echo "APP_USER_ID=$(id -u)" >> $GITHUB_ENV
#          echo "APP_GROUP_NAME=$(id -gn)" >> $GITHUB_ENV
#          echo "APP_GROUP_ID=$(id -g)" >> $GITHUB_ENV
#          make init
#
#      - name: 'Pull docker images'
#        run: |
#          make docker-pull || true # This can fail if the tag does not exist yet.
#
#      - name: 'Build docker images'
#        run: |
#          make docker-build
#
#     - name: 'QA'
#       # Only run QA once.
#       if: ${{ matrix.php }} == '8.1' && ${{ matrix.wp }} == '6.0'
#       run: make qa QUIET=1
#
#      - name: 'Tests'
#        run: |
#          # Only detach container, dont rebuild them.
#          make test-parallel-docker QUIET=1 DOCKER_UP_ARGS=--detach
#
#      - name: 'Push images'
#        run: make docker-push