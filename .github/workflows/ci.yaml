name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

#permissions:
#  contents: read

env:
  ENV: ci
  TAG: auth-bundle
  FORCE_RUN_IN_CONTAINER: 1

jobs:

  QA:
    name: QA - ${{matrix.runs-on}}
    runs-on: ${{matrix.runs-on}}
    strategy:
      matrix:
        runs-on: [buildjet-8vcpu-ubuntu-2004, buildjet-16vcpu-ubuntu-2004, buildjet-32vcpu-ubuntu-2004, buildjet-64vcpu-ubuntu-2004]
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v3

      - name: 'Install docker compose'
        run : |
            chmod +x "${GITHUB_WORKSPACE}/.github/bin/install-docker-compose.sh"
            "${GITHUB_WORKSPACE}/.github/bin/install-docker-compose.sh"

      - name: 'Login to GitHub package registry'
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Initialize make'
        run: |
          echo "APP_USER_NAME=$(id -un)" >> $GITHUB_ENV
          echo "APP_USER_ID=$(id -u)" >> $GITHUB_ENV
          echo "APP_GROUP_NAME=$(id -gn)" >> $GITHUB_ENV
          echo "APP_GROUP_ID=$(id -g)" >> $GITHUB_ENV
          make init

      - name: 'Pull docker images'
        run: |
          make docker-pull || true # This can fail if the tag does not exist yet.

      - name: 'Build docker images'
        run: |
          make docker-build

      - name: 'Start containers'
        run: |
          make docker-up MODE=--detach

      - name: 'QA'
        run: |
          make build-codeception
          # We need the vendor directory on the runner so that we can share it
          # with the jazqal/phpqa docker image.
          make docker-copy-vendor
          make qa QUIET=1

#  Build:
#    runs-on: [buildjet-2vcpu-ubuntu-2004, buildjet-4vcpu-ubuntu-2004, buildjet-8vcpu-ubuntu-2004, buildjet-16vcpu-ubuntu-2004, buildjet-32vcpu-ubuntu-2004, buildjet-64vcpu-ubuntu-2004]
#    strategy:
#      fail-fast: false
#      matrix:
#        php: [ '8.1', '8.0', '7.4' ]
#        wp: [ '6.0']
#    env:
#      PHP_VERSION: ${{ matrix.php }}
#      WP_VERSION: ${{ matrix.wp }}
#    steps:
#      - name: 'Checkout repository'
#        uses: actions/checkout@v3
#
#      - name: 'Install docker compose'
#        run: |
#          chmod +x "${GITHUB_WORKSPACE}/.github/bin/install-docker-compose.sh"
#          "${GITHUB_WORKSPACE}/.github/bin/install-docker-compose.sh"
#
#      - name: 'Login to GitHub package registry'
#        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: 'Initialize make'
#        run: |
#          echo "APP_USER_NAME=$(id -un)" >> $GITHUB_ENV
#          echo "APP_USER_ID=$(id -u)" >> $GITHUB_ENV
#          echo "APP_GROUP_NAME=$(id -gn)" >> $GITHUB_ENV
#          echo "APP_GROUP_ID=$(id -g)" >> $GITHUB_ENV
#          make init
#
#      - name: 'Pull docker images'
#        run: |
#          make docker-pull || true # This can fail if the tag does not exist yet.
#
#      - name: 'Build docker images'
#        run: |
#          make docker-build
#
#      - name: 'Parallel docker tests'
#        run: |
#          make test-parallel-docker QUIET=1 DOCKER_UP_ARGS=--detach
#
#      - name: 'Push docker images to GitHub package registry'
#        run: |
#          make docker-push
#

 
